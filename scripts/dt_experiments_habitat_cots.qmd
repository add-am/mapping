---
title: "AIMS-MMP Crown-of-Thorns Data testing"
subtitle: "A Healthy Waters Partnership Analysis"
description: "This script maps the location and density of the Crown-of-Thorns (COTS) starfish in the Great Barrier Reef region. The output of this script is used in the Corals of Cleveland Bay StoryMap."
author: "Adam Shand"
format: html
params:
  project_crs: "EPSG:7844"
---

# Introduction

This script is designed to explore the possibility of creating a Crown of Thorns (COTS) layer to be used in the Coral StoryMap, and possibly other products? Below we convert a csv to a spatial dataset.

To do/ideas

split each year? Can do a roll through of years using heat map (AIMS does use heat map)
get most recent year? Not as informative
Log data? better colour scheme ( Looks like AIMS does log - average cots per tow: <0.01, 0.01-0.1, 0.1-0.2, 0.2-1, >1)

Look at animation on this website
https://www.aims.gov.au/research-topics/environmental-issues/crown-thorns-starfish/monitoring-crown-thorns-starfish#:~:text=AIMS'%20Long%2DTerm%20Monitoring%20Program,along%20the%20Great%20Barrier%20Reef.
        
# Script Set Up

This script requires multiple core spatial packages, each of which is loaded below.

```{r}
#| label: load packages

#use pacman function to load and install (if required) all other packages
pacman::p_load(tidyverse, glue, here, sf, tmap, janitor)

```

Then we also need to set up key variables for the script, as well as the output location.

```{r}
#| label: create save path and establish project crs

#set project crs
proj_crs <- params$project_crs

#create a file path to help with saving outputs
save_outputs <- here("outputs/dt_experiments_habitat_cots/")
read_data <- here("data/dt_experiments/habitat_cots/")

#bring the path to life
dir.create(save_outputs)
dir.create(read_data)

#turn off s2 geometry
sf_use_s2(FALSE)

```

# Load Data

Now the script is set up we need to load in all of the required datasets. We will need the COTS dataset and the GBR Boundaries dataset, but we will also load in a file for the whole of Queensland to create a map for inspecting data.

```{r}
#| label: load the n3 region

#read in the custom function to clean column names into our specific style
source("../functions/name_cleaning.R")

#read in qld outlines data from the gisaimsr package, filter for land and islands, update crs
qld <- get(data("gbr_feat", package = "gisaimsr")) |> 
  name_cleaning() |> 
  filter(FeatName %in% c("Mainland", "Island")) |> 
  st_transform(proj_crs)

#get the gbr boundaries
gbr_bounds <- get(data("gbr_bounds", package = "gisaimsr")) |> 
  name_cleaning()

#read in cots and make a sf
cots <- read_csv(glue("{read_data}/cots_manta_tows.csv")) |> 
  name_cleaning()

```

# Edit Data

There is not alot of editing that has to be done for this, just converting to a spatial file.

```{r}
#| label: edit data

#convert to a spatial file
cots <- st_as_sf(cots, coords = c("Longitude", "Latitude"), crs = proj_crs)

```

# Visualise Data

Before we save we will create a quick map to confirm everything looks how it is supposed to.

```{r}
#| label: map data
#| output: true

#Create a map to confirm this is what we are looking for
tm_shape(qld) +
  tm_polygons() +
  tm_shape(cots) +
  tm_dots(col = "red") +
  tm_shape(gbr_bounds, is.master = T) +
  tm_borders(alpha = 0)

```

# Save Data

Then finally we can save the data ready to be used in the Coral StoryMap

```{r}
#| label: save data

#save data
write_sf(cots, glue("{save_outputs}/cots.gpkg"))

```

